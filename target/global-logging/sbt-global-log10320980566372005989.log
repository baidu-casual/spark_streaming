[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.0 (AdoptOpenJDK Java 11.0.10)
[debug] Load.defaultLoad until apply took 544.084665ms
[debug]                 Load.loadUnit: plugins took 119.66825ms
[debug]                 Load.loadUnit: defsScala took 0.458679ms
[debug] [Loading] Scanning directory /home/xs107-bairoy/xenonstack/l2/module4/spark_streaming/project/project
[debug]                   Load.loadUnit: mkEval took 14.829554ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/xs107-bairoy/xenonstack/l2/module4/spark_streaming/project/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.617655 ms
[info] loading settings for project spark_streaming-build-build from metals.sbt ...
[debug]                     Load.resolveProject(spark_streaming-build-build) took 62.501857ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id spark_streaming-build-build, base: /home/xs107-bairoy/xenonstack/l2/module4/spark_streaming/project/project, plugins: List(<none>))) took 107.728951ms
[debug] [Loading] Done in /home/xs107-bairoy/xenonstack/l2/module4/spark_streaming/project/project, returning: (spark_streaming-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 2447.497473ms
[debug]                 Load.loadUnit: cleanEvalClasses took 9.112276ms
[debug]               Load.loadUnit(file:/home/xs107-bairoy/xenonstack/l2/module4/spark_streaming/project/project/, ...) took 2585.264384ms
[debug]             Load.apply: load took 2732.847867ms
[debug]             Load.apply: resolveProjects took 7.442796ms
[debug]             Load.apply: finalTransforms took 98.724423ms
[debug]             Load.apply: config.delegates took 6.896914ms
